{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAAS,uBACAC,SAXY,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKb,UAEL,uBACMO,KAAO,OACbC,MAAUT,EACVU,SApBsB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,UAalB,Q,+BCtBAG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDAE2BC,UAAUH,GAFrC,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAahBM,GAbgB,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,yCAAf,UACC,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCHAS,EAAW,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAAgB,ECDf,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAU,WACN1B,EAAQC,GAAW0B,MAAK,SAAAC,GACpBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACtB,IAGGuB,EDZmBK,CAAa5B,GAA/Ba,EAJ+B,EAIpCN,KAAYe,EAJwB,EAIxBA,QAQjB,OACE,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEKL,EAAOJ,KAAI,SAAAC,GAAG,OACf,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEpBjBkB,EAAe,WAAM,MAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAWhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEO6C,EAAWrB,KAAI,SAAAT,GAAS,OAAI,cAAC,EAAD,CAA0BA,UAAWA,GAAtBA,Y,MCjBxD+B,IAASC,OAAQ,cAAC,EAAD,IACbC,SAASC,eAAe,W","file":"static/js/main.57a785b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategorias(c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit hecho');\r\n    }\r\n\r\n    return ( <\r\n        form onSubmit = { handleSubmit } >\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n        /> <\r\n        /form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async(categoria) => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=I2kbttlynUEOM0JLX3GwAme2QNzjPvvB`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    });\r\nreturn gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n         <img src={url} alt={title}/>\r\n         <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GiftGrid = ({ categoria }) => {\r\n\r\n//   const [images, setImages] = useState([]);\r\n\r\nconst {data:images,loading} = useFetchGifs(categoria);\r\n\r\n//   useEffect(() => {\r\n//  getGifs(categoria).then(setImages);\r\n//   }, [categoria]);\r\n \r\n\r\n  //   getGifs();\r\n  return (\r\n    <> \r\n    <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n    {loading && <p className=\"animate__animated animate__flash\">Loading</p>  }\r\n\r\n    <div className=\"card-grid\">\r\n     \r\n        {images.map(img => (\r\n        <GifGridItem key={img.id} {...img}/>\r\n        ))}\r\n \r\n    </div>\r\n  </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [categoria]);\r\n\r\n\r\n    return state;\r\n}","import React,{useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () =>{\r\n    //     //   setCategorias([...categorias, 'DC']);\r\n    //     setCategorias(cats => ['DC',...categorias])\r\n    // }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategorias={setCategorias}/>\r\n      <hr />\r\n    \r\n      <ol>\r\n         {\r\n             categorias.map(categoria => <GiftGrid key={categoria} categoria={categoria} />)\r\n      \r\n         }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render( <GifExpertApp />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}